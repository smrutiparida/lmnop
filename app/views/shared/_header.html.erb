<script>
<% if session.has_key?("user") %>
  var is_signed = true
  var user_id = <%= session[:user]["user_id"] %>
<% else %>
  var is_signed = false
  var user_id = ""
<% end %>



  var offlineData = {};  
  var rankData = {};
  var hashtag = "<span class='commonBtnTag'><a href='#' class='hashtagclick' onclick='update(this,\"${key}\");'>${key}</a></span>";
  
  $.template( "twitterTemplate", markup );
  $.template( "trendingTemplate", hashtag );

  var replyTemp = "<div class='tweet_reply tweet_reply_reply'><form><img src='/images/reply_arrow.png' style='display:none;'><textarea rows='3' name='myfield' id='myfield' maxlength='140' style='width:96%;'></textarea><div class='reply_action'><button href='#' class='btn btn-small' style='float:right;' onclick='return closeContainer_reply();' id='hide'>Cancel</button><button type='submit' onclick='return post_reply_data(\"${tweet_id}\");' class='btn btn-info btn-small' style='float:right;'>Tweet</button><div id='CharCountLabel1'></div></div></form></div>";

  $.template("replyTemplate", replyTemp);

  var retweetTemplate = "<div class='tweet_reply tweet_reply_retweet'><form><img src='/images/reply_arrow.png'  style='position:absolute; top:-10px;'><h4 style='text-align:center'>Retweet this to your followers?</h4><div class='retwet_action'><button type='submit' onclick='return post_retweet_data(\"${tweet_id}\");' class='btn btn-info btn-small'>Retweet</button><button class='btn btn-small' onclick='return closeContainer_retweet();'>Cancel</button></div></form></div>";

  $.template("retweetTemplate", retweetTemplate);

  var doneTemplate = "<div class='done_reply tweet_reply' style='display:block;'><img src='/images/reply_arrow.png'  style='position:absolute; top:-10px;'><h4 style='text-align:center'>Posted to your Timeline.</h4><div class='retwet_action'><a href='#' class='btn btn-small' onclick='return closeContainer_done();'>Close</a></div></div>";

  
    

  var conversationTemplate = '<div class="tweet_conv"><div class="tw_img"><img src="${profile_image_url}"></div><h1><span><img src="/images/t_birrd_small.png"></span><a href="#">${name}</a><span id="" class="flRt modalCal">${created_at}</span></h1><span id="">@${screen_name}</span><div class="clr"></div><p>{{html tweet_text}}</p></div>';

  $.template("conversationTemplate", conversationTemplate);
  
  
  var search_url = "http://54.254.80.93/tweet-store/index.php/api/TweetsUnique/get?"

  function closeContainer_reply(){
    $(".tweet_reply_reply").each(function(){$(this).find('#myfield').val(''); $(this).hide().remove();});
    return false;
  }

  function closeContainer_retweet(){
   $(".tweet_reply_retweet").each(function(){$(this).hide().remove();});
    return false; 
  }

  function closeContainer_done(){
    $(".done_reply").each(function(){$(this).hide().remove();});
    return false;
  }

  

  function post_reply_data(id){
    var text = $('#myfield').val();
    $('#' + id).find('.tweet_reply_reply').html('<img style="text-align:center" src="/images/loading.gif" />');
    $.ajax({ type: "POST",
            url: "/tweets/reply", 
            data: { 'text': text, 'id': id } ,
            success: function(data){
              if(data["message"] != ""){
                $('#' + id).find('.tweet_reply_reply').after("<div class='done_reply' style='display:block;'><h3>" + data[message] + "</h3><div><a href='#' class='btn btn-small' onclick='return closeContainer_done();'>Close</a></div></div>").remove();
              }
              else {
                $('#' + id).find('.tweet_reply_reply').after(doneTemplate).remove(); 
              }
              
            },
            headers: {'X-Transaction': 'POST Reply', 'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')},
            dataType: 'json'});
    return false;
  }

  function post_retweet_data(id){
    $('#' + id).find('.tweet_reply_retweet').html('<img style="text-align:center" src="/images/loading.gif" />');
    $.ajax( {type: "POST",
            url: "/tweets/retweet", 
            data: { 'id': id },
            success: function(data){
              if(data["message"] != ""){
                $('#' + id).find('.tweet_reply_retweet').after("<div class='done_reply' style='display:block;'><h3>" + data[message] + "</h3><div><a href='#' class='btn btn-small' onclick='return closeContainer_done();'>Close</a></div></div>").remove();
              }
              else {
                $('#' + id).find('.tweet_reply_retweet').after(doneTemplate).remove();   
              }
              
            },
            headers: {'X-Transaction': 'POST Retweet', 'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')},
            dataType: 'json'});

    //$.post( "/tweets/retweet", { 'id': id }, function(){
        //alert("success");
    //    $('#' + id).find('.tweet_reply_reply').after(doneTemplate).remove(); 
    //}, 'json' );

    return false;
  }

/* 

  function showModal(ele, val){
    search_params["in_reply_to_status_id"] = val;
    console.log("calling from showModal");
    console.log(val)
    
    var showModalFunction = function(data){
      //var processed_tweets = urlify(data["data"]["tweets"]);
    
      var processed_tweets = urlify(data["data"]["tweets"]);
      $.tmpl( "conversationTemplate", processed_tweets ).appendTo( "#modal-content-id" );
      $(".modalCal").each(function(index){ $(this).text(timeSince($(this).text())); }); 
      $('#modal-container-conv').modal('show');
    }
    $("#modal-content-id").empty();
    callSearchServer(showModalFunction);
  }
  
*/
  function updateRank(droppedUser, newRank)
  {
    _.each(offlineData["tweets"], function(tweet,index,list){
      if(tweet.user_id == droppedUser){
        tweet.rank = newRank;
        console.log("Rank updated for" + tweet.name);
      }
    })
  }

  
  function callOfflineServer(func_call, ele){
  
  //frequency_info = JSON.parse('<%= @frequency_data.to_json.to_s %>');
  //offlineData = JSON.parse('<%= @tweet_list.to_json.to_s %>');  
    
    $.getJSON( '/tweets/offline', search_params, function( data ) {
      if(data["cache"] == true)
      {
        data = offlineData
      }
      if(data['tweets'].length > 0) {

        offlineData = JSON.parse(JSON.stringify(data));
        
        var tweet_list = data["tweets"];
        var tweet_map = _.groupBy(data["tweets"], "screen_name");
        console.log(tweet_map);

        if (search_params["uniqueUser"]){
          tweet_list = [];
          _.each(tweet_map, function(v,k,l){ tweet_list.push(_.first(v)) })
          console.log("uniqueUser")
          console.log(tweet_list)
        }
 
        if(search_params["screen_name"] != ""){
          tweet_list = tweet_map[search_params["screen_name"]];
          console.log("screen name")
          console.log(tweet_list)
        }
      
        //if(search_params["low"] != "" && search_params["high"] != ""){
         var low = parseInt(search_params["low"]);
         var high = parseInt(search_params["high"]);

          temp = []
          _.each(tweet_list, function(tweet,index,list){
            if(tweet.rank >= low && tweet.rank <= high){
              temp.push(tweet)
            }
          })
          console.log("low high")
          console.log(temp)
          tweet_list = temp
        //}
        
        var new_data = {"tweets":tweet_list,"facets":data["facets"]}

        func_call(new_data, ele);
      }
      else {
        $( "#tweetlist" ).html("<div class='tweetlist'><p>Sorry, There are no tweets from people with UserRank range " + search_params["low"] + " - " + search_params["high"] + " - because they didn't tweet in the last 24 hours. Please change the range in the slider to see tweet.<p><p>Or if you think there is a bug, please do send us a screenshot at <a href='mailto:amar@brizzlabs.com'>amar@brizzlabs.com</a> & we will try fixing it.</p></div>"); 
      }
      return false;
    });

    return false;
  }


  function callSearchServer(func_call, ele) {
    
    //$(ele).html('<img src="/images/loading.gif" />');
    $.getJSON( search_url, search_params, function( data ) {
      console.log("before success");
      console.log(data['success']);
      if(data['success']){  
        if(data["data"]["totalCount"] > 0){
          
          
                func_call(data, ele);
              

          
         

        }
        else {
             $(ele).html("<div class='tweetlist'><p>Sorry, There are no tweets from people with UserRank range " + search_params["low"] + " - " + search_params["high"] + " - because they didn't tweet in the last 24 hours. Please change the range in the slider to see tweet.<p><p>Or if you think there is a bug, please do send us a screenshot at <a href='mailto:amar@brizzlabs.com'>amar@brizzlabs.com</a> & we will try fixing it.</p></div>");
        }
      }
      else
      {
        $( ele).html("<div class='tweetlist'><p>Oops! Something went wrong. Please check us again.</p></div>");
      }
    });
  }

function preProcessTermFrequency(array_term_frequency){
  term_obj = {}
  for ( var i in array_term_frequency ){
      term_obj[array_term_frequency[i].key] = array_term_frequency[i].doc_count;
      //alert(array_term_frequency[i].count);
    }  
  return term_obj;  
}

function add_more_link(term_obj, all_tweets){
  //var term_obj = {};
  //my_shit = all_tweets;
  
  
  for ( var i=0; i < all_tweets.length; i++ ){
    
    if (all_tweets[i]["screen_name"] in term_obj){
      all_tweets[i]["more_count"] = term_obj[all_tweets[i]["screen_name"]];
    }
    else {
      all_tweets[i]["more_count"] = 0;
    }
  }
  
  return all_tweets;
}

function urlify(all_tweets) {
  var urlRegex = /(https?:\/\/[^\s]+)/g;
  for ( var i=0; i < all_tweets.length; i++ ){
      all_tweets[i]['tweet_text'] = all_tweets[i]['tweet_text'].replace(urlRegex, function(url) {
          return '\<a target="_blank" href="' + url + '"\>' + url + '\<\/a\>';
        });
  }
  return all_tweets;  
}

function timeSince(date) {
  if(date.indexOf("ago") != -1){
    return date;
  }
  //var split_data = date.split(" ");
  //var date_info  = split_data[0].split("-").map(function(item) {
  //                                                               return parseInt(item, 10);
  //    });;
  //var time_info  = split_data[1].split(":").map(function(item) {
  //                                                                return parseInt(item, 10);
  //                         
  //                                   });;
  
  var curTime = new Date();
  //var timezoneDiff = curTime.getTimezoneOffset() * 60000;
  //var seconds = Math.floor((curTime.getTime() - (new Date(date)).getTime() + timezoneDiff) / 1000);
  //var seconds = Math.floor((curTime.getTime() - (new Date(date_info[0],date_info[1] -1,date_info[2],time_info[0],time_info[1],time_info[2])).getTime() + timezoneDiff) / 1000);
  var seconds = Math.floor((curTime.getTime() - (Date.parse(date)))/1000);
  var interval = Math.floor(seconds / 31536000);
  if (interval > 0) {
    return interval + "y ago";
  }
  interval = Math.floor(seconds / 2592000); 
  if (interval > 0) {
    return interval + "mth ago";
  }
  interval = Math.floor(seconds / 86400);
  if (interval > 0) {
    return interval + "d ago";
  }
  interval = Math.floor(seconds / 3600);
  if (interval > 0) {
    return interval + "h ago";
  }
  interval = Math.floor(seconds / 60);
  if (interval > 0) {
    return interval + "m ago";
  }
  return Math.floor(seconds) + "s ago";
}
  
function processValues(values){
  values[0] = (100 - values[0]) * 10;
  values[1] = (100 - values[1]) * 10;
  if (values[0] == 0){
    values[0] = 1;
  }
  return values;
}



function closeContainer_more(){
  $('#slide-more').slideUp(2000).remove();
  search_params["screen_name"] = "";
  search_params["uniqueUser"] = true;
  $('.more-shown').removeClass('more-shown'); 
  return false;
}

function expand(ele, val){
  //var values = $( "#slider-range" ).slider( "values" );
  //values = processValues(values);
  
  $('#slide-more').slideUp(200).remove();
  console.log("line 1")

  if($(ele).hasClass('more-shown')){      
    //callSearchServer("tweet_search", values[1],values[0],50,0);      
    //$(ele).text("show more");
    search_params["screen_name"] = "";
    search_params["uniqueUser"] = true;
    $(ele).removeClass('more-shown');
    console.log("data removed")

  }else{
    $(ele).addClass('more-shown');
    search_params["screen_name"] = val;//encodeURIComponent(val);
    search_params["uniqueUser"] = false;
    //callSearchServer("single_user_tweets", values[1],values[0],50,0,encodeURIComponent(val));  

    //$(ele).text("show less");

      var tweet = $(ele).parent().parent();
      var tweet_to_be_loaded = parseInt($(tweet).attr('data-count'));
      if(tweet_to_be_loaded > 50){
        tweet_to_be_loaded = 50;  
      }

      var height = 128 * Math.ceil(tweet_to_be_loaded/3);
      //find element in the next row
      find_ele_to_slide = $(tweet).next();

      if ($(find_ele_to_slide).length == 0 || find_ele_to_slide === undefined || typeof find_ele_to_slide === "undefined") {
        $(tweet).after('<div id="slide-more" style="height:auto;display:none"><div class="close_more"><a href="" onclick="return closeContainer_more();"><img src="/images/close_icn.png"></a></div><div id="topArrow" style="position:absolute;top:-.45%;left:50%;"></div></div>');
      }
      else {
        console.log(find_ele_to_slide)
        position = $(tweet).position().top;
        next_position = $(find_ele_to_slide).position().top;
        var count = 2;
        var diff = next_position - position;
        while( diff < 50){
          position = next_position;
          tweet = find_ele_to_slide;
          find_ele_to_slide = $(find_ele_to_slide).next();
          if (typeof find_ele_to_slide === "undefined") {
            diff = 100000;
          }
          else {
            next_position = $(find_ele_to_slide).position().top
            diff = next_position - position;  
          }
          count = count - 1;
        }

        var leftAlign = 15 + count * 35;
        //if(diff == 100000){
          $(tweet).after('<div id="slide-more" style="height:auto;display:none"><div class="close_more"><a href="" onclick="return closeContainer_more();"><img src="/images/close_icn.png"></a></div><div id="topArrow" style="position:absolute;top:-.45%;left:' + leftAlign + '%;"></div></div>');
        //}
        //else{
        //  $(find_ele_to_slide).before('<div id="slide-more" style="height:' + height + 'px;display:none"><div class="close_more"><a href="" onclick="return closeContainer_more();"><img src="/images/close_icn.png"></a></div><div id="topArrow" style="position:absolute;top:-.45%;left:' + leftAlign + '%;"></div></div>');  
        //}
        
        console.log("data")
      }
      
      $('#slide-more').slideDown(500);
      callServer('#slide-more');
      //$('#topArrow').css('left', leftAlign + '%')
      //$('#topArrow').css('top',  '3.6%')
      //$('#topArrow').css('position', 'absolute')
      
  }
  

  return false;
}

function update(ele, val){  

  //var values = $( "#slider-range" ).slider( "values" );
  //values = processValues(values);

  
  if($(ele).parent().hasClass('active')){
    //global_hashtag = "";
    search_params["q"] = "";
    $(ele).parent().removeClass('active');
    $('#tweetlist').empty()
    callServer('#tweetlist');
    
  }else{
    $(ele).parent().addClass('active').siblings().removeClass('active');  
    //global_hashtag = val;
    search_params["q"] = val;//encodeURIComponent(val);
    search_params["screen_name"] = "";
    search_params["uniqueUser"] = true;
    $('#tweetlist').empty()
    callServer('#tweetlist');//"user_search", values[1], values[0], 50,0,encodeURIComponent(val));
  }
}

function bringBird(){
  $( "#rangeSelectvalue" ).show();
}

function hideBird(){
  $( "#rangeSelectvalue" ).hide();
}
  
<!--for coming soon popup-->
function showDivTag(){
selectOption = $('#selectOpt').val();
//  var myselect = document.getElementById("selectOpt");
//  var selectOption = myselect.options[myselect.selectedIndex].value;
  
  if(selectOption == "mytweets"){
    //callServer();
    window.location.href = '/tweets/my';  
  }
  else if(selectOption == "1"){
    window.location.href = '/tweets/index?topic=' + selectOption;   
    //search_params["topic"] = selectOption;
    //search_params["q"] = ""
    //search_params["uniqueUser"] = false
    //$('#tweetlist').empty()
    //callServer('#tweetlist');
  }
  else {

    window.location.href = '/tweets/index';
  }



}
<!--for coming soon popup-->

function doDragDrop(){
  $(".draggable").draggable({
      helper: 'clone',
      start: function(event, ui) {
        
      }
  });
  $( ".droppable" ).droppable({
    drop: function( event, ui ) {
      var left = $( "#slider-range" ).position().left;
      var width = $( "#slider-range" ).width();
      var pos_drop = ui.offset.left - $(this).offset().left;
      if (pos_drop <= 0 )
        pos_drop = 0;
      else if (pos_drop > width )
        pos_drop = width;
      var per = (pos_drop / width).toPrecision(2) * 100;
      per = Math.floor(100 - per);
      var dropped_user_id = $(ui.draggable).attr('user_id');

      console.log(per + "\t" + dropped_user_id);

      temp = {}
      temp["rank"] =  per * 10;
      temp["set"] = true
      user_data = {}
      user_data["user_id"] = user_id
      user_data["ranks"] = {}
      user_data["ranks"][dropped_user_id] = temp

      //$.post( "http://54.254.80.93/tweet-store/index.php/api/TweetsUnique/user_rank", user_data, function( data ) {
      //  alert("dropped");
      //});

      $.ajax({
          type: 'POST',
          url: 'http://54.254.80.93/tweet-store/index.php/api/TweetsUnique/user',
          data: JSON.stringify(user_data),
          success: function(data) { 
            $('#tweetlist').empty()  
            updateRank(dropped_user_id, per*10);
            callServer('#tweetlist');},
      });

      $( "#slider-range" ).slider( "enable" );
      $( this )
        .removeClass( "ui-state-highlight" );
    },
    over: function(event, ui) {
      $( this )
        .addClass( "ui-state-highlight" );
        $( "#slider-range" ).slider( "disable" );
    },
    out: function(event, ui) {
      $( this )
        .removeClass( "ui-state-highlight" );
      $( "#slider-range" ).slider( "enable" );
    }
  });
}

function set_url(tweet) {
  var urlRegex = /(https?:\/\/[^\s]+)/g;

  return tweet.replace(urlRegex, function(url) {
          return '\<a target="_blank" href="' + url + '"\>' + url + '\<\/a\>';
        });
}

$( document ).ready(function() {
  //$('#modal-container-conv').modal('hide');

  
  console.log("from on ready");
  $('#tweetlist').empty()
  callServer('#tweetlist');
  


  $( "#viewCountry" ).change(function() {
    search_params["country"] = $("#viewCountry option:selected").attr('value');
    $('#tweetlist').empty()
    callServer('#tweetlist');    
  });

  $('#modal-container-conv').on('hidden.bs.modal', function (e) {
    search_params["in_reply_to_status_id"] = ""; 
  })

  $(document).on("click", ".showmenu_reply", function(){
    //if(!is_signed){
    //  alert("Please sign in!");
    //}
    //else {
      
      var el = $(this).parent().parent().parent();
      if($(el).next().hasClass("tweet_reply_reply")){
        $(el).next().hide().remove();
      } 
      else {
        $(".tweet_reply").each(function(){$(this).hide().remove();});
        temp = {'tweet_id': $(el).parent().attr('id')};
        replyTemp = $.tmpl( "replyTemplate", temp );
        $(el).after(replyTemp);
        $(el).next().slideToggle("fast");
        
      }  
    //}
    return false;
  });

  $(document).on("click", ".showmenu_retweet", function(){
    //if(!is_signed){
    //  alert("Please sign in!");
    //}
    //else {
      
      var el = $(this).parent().parent().parent();
      if($(el).next().hasClass("tweet_reply_retweet")){
        $(el).next().hide().remove();
      } 
      else {
        $(".tweet_reply").each(function(){$(this).hide().remove();});
        temp = {'tweet_id': $(el).parent().attr('id')};
        retweetTemp = $.tmpl( "retweetTemplate", temp );
        $(el).after(retweetTemp);
        $(el).next().slideToggle("fast");
        
      }  
    //}
    return false;
  });

  $(document).on("click", ".make-favorite", function(){
      var id = $(this).attr('tid');
      //var el = $(this);
      //console.log($(el))
      var is_favorite = $(this).hasClass('favorite');

      $.ajax( {type: "POST",
            url: "/tweets/favorite", 
            data: { 'id': id, 'is_favorite': is_favorite },
            success: function(data){ 
              if(data["message"] != ""){
                var el = $("a[tid*=" + id + "]");
                $(el).hasClass('favorite') ? $(el).removeClass('favorite').html("<img src='/images/favorite_icn.png' />") : $(el).addClass('favorite').html("<img src='/images/favorite_icn_done.png' />");    
              }
            },
            headers: {'X-Transaction': 'POST Favorite', 'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')},
            dataType: 'json'
          });
      return false;
  });
});

var callOfflineFunc = function offline_after_call(data, ele){
   //offlineJSONData  =  processOffline(offlineData)
   var processed_tweets = urlify(data["tweets"]);
   
    if (search_params["screen_name"] == ""){
      processed_tweets = add_more_link(data["facets"] , processed_tweets);
    }
    else {
      processed_tweets = add_more_link([], processed_tweets); 
    }
    
    console.log(processed_tweets)
    //$(ele).empty()
    $.tmpl( "twitterTemplate", processed_tweets ).appendTo( ele );
    console.log($.tmpl( "twitterTemplate", processed_tweets ))
    /*
    if ( search_params["q"] == "" && search_params["screen_name"] == "") {
      $("#trending").empty();
      $.tmpl("trendingTemplate", data["data"]["facets"]["hashtag_frequency"]["terms"].slice(0,20)).appendTo( "#trending" );
    }
    */
    $(".timeCal").each(function(index){ $(this).text(timeSince($(this).text())); }); 
    doDragDrop();
    return false;
  }

  var callServerFunc = function processServerDate(data, ele){
    console.log(data);
    var processed_tweets = urlify(data["data"]["tweets"]);
    if (search_params["screen_name"] == ""){
      var term_obj = preProcessTermFrequency(data["data"]["aggregations"]["user_tweet_frequency"]["buckets"]);
      processed_tweets = add_more_link(term_obj, processed_tweets);
    }
    else {
      processed_tweets = add_more_link([], processed_tweets); 
    }
    
    console.log(processed_tweets)
    //$(ele).empty()
    $.tmpl( "twitterTemplate", processed_tweets ).appendTo( ele );
    //$(ele).height("auto");
    console.log($.tmpl( "twitterTemplate", processed_tweets ))
    
    if ( search_params["q"] == "" && search_params["screen_name"] == "") {
      $("#trending").empty();
      $.tmpl("trendingTemplate", data["data"]["aggregations"]["hashtags_freq"]["buckets"].slice(0,20)).appendTo( "#trending" );
    }
    
    $(".timeCal").each(function(index){ $(this).text(timeSince($(this).text() + " UTC")); }); 
    return false;
  }

function callServer(ele)
{
  if(window.location.href.indexOf("/tweets/my") != -1){
    //$("#tweetlist").empty();
    callOfflineServer(callOfflineFunc, ele);
  }
  else {
    //$("#tweetlist").empty();
   
    callSearchServer(callServerFunc, ele);
  }
  return false;
}
</script>
  

  <div class="tweetMainDiv">
    <div id="tweetlist"></div>
  </div>
  
        